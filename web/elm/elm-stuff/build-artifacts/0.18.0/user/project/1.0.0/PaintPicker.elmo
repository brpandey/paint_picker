var _user$project$PaintPicker$paintsApiUrl = 'http://localhost:4000/api/paints';
var _user$project$PaintPicker$update = F2(
	function (msg, model) {
		var _p0 = msg;
		if (_p0.ctor === 'Pick') {
			var refreshPaint = function (paint) {
				return _elm_lang$core$Native_Utils.eq(paint.cart, _p0._0.cart) ? _elm_lang$core$Native_Utils.update(
					paint,
					{picked: !paint.picked}) : paint;
			};
			return {
				ctor: '_Tuple2',
				_0: A2(_elm_lang$core$List$map, refreshPaint, model),
				_1: _elm_lang$core$Platform_Cmd$none
			};
		} else {
			if (_p0._0.ctor === 'Ok') {
				return {ctor: '_Tuple2', _0: _p0._0._0, _1: _elm_lang$core$Platform_Cmd$none};
			} else {
				var _p1 = A2(_elm_lang$core$Debug$log, 'OOps!', _p0._0._0);
				return {ctor: '_Tuple2', _0: model, _1: _elm_lang$core$Platform_Cmd$none};
			}
		}
	});
var _user$project$PaintPicker$Paint = F4(
	function (a, b, c, d) {
		return {cart: a, color: b, sheen: c, picked: d};
	});
var _user$project$PaintPicker$paintDecoder = A5(
	_elm_lang$core$Json_Decode$map4,
	_user$project$PaintPicker$Paint,
	A2(_elm_lang$core$Json_Decode$field, 'cart', _elm_lang$core$Json_Decode$int),
	A2(_elm_lang$core$Json_Decode$field, 'color', _elm_lang$core$Json_Decode$string),
	A2(_elm_lang$core$Json_Decode$field, 'sheen', _elm_lang$core$Json_Decode$string),
	A2(_elm_lang$core$Json_Decode$field, 'picked', _elm_lang$core$Json_Decode$bool));
var _user$project$PaintPicker$NewPaints = function (a) {
	return {ctor: 'NewPaints', _0: a};
};
var _user$project$PaintPicker$getPaints = A2(
	_elm_lang$http$Http$send,
	_user$project$PaintPicker$NewPaints,
	A2(
		_elm_lang$http$Http$get,
		_user$project$PaintPicker$paintsApiUrl,
		A2(
			_elm_lang$core$Json_Decode$at,
			{
				ctor: '::',
				_0: 'data',
				_1: {ctor: '[]'}
			},
			_elm_lang$core$Json_Decode$list(_user$project$PaintPicker$paintDecoder))));
var _user$project$PaintPicker$init = {
	ctor: '_Tuple2',
	_0: {ctor: '[]'},
	_1: _user$project$PaintPicker$getPaints
};
var _user$project$PaintPicker$Pick = function (a) {
	return {ctor: 'Pick', _0: a};
};
var _user$project$PaintPicker$paintSingle = function (paint) {
	var pickedClass = paint.picked ? paint.color : 'available';
	return A2(
		_elm_lang$html$Html$li,
		{
			ctor: '::',
			_0: _elm_lang$html$Html_Attributes$class(
				A2(_elm_lang$core$Basics_ops['++'], 'paint ', pickedClass)),
			_1: {
				ctor: '::',
				_0: _elm_lang$html$Html_Events$onClick(
					_user$project$PaintPicker$Pick(paint)),
				_1: {ctor: '[]'}
			}
		},
		{
			ctor: '::',
			_0: _elm_lang$html$Html$text(
				A2(
					_elm_lang$core$Basics_ops['++'],
					_elm_lang$core$Basics$toString(paint.cart),
					A2(_elm_lang$core$Basics_ops['++'], ' ', paint.color))),
			_1: {ctor: '[]'}
		});
};
var _user$project$PaintPicker$view = function (model) {
	return A2(
		_elm_lang$html$Html$ul,
		{
			ctor: '::',
			_0: _elm_lang$html$Html_Attributes$class('paints'),
			_1: {ctor: '[]'}
		},
		A2(_elm_lang$core$List$map, _user$project$PaintPicker$paintSingle, model));
};
var _user$project$PaintPicker$main = _elm_lang$html$Html$program(
	{
		init: _user$project$PaintPicker$init,
		view: _user$project$PaintPicker$view,
		update: _user$project$PaintPicker$update,
		subscriptions: function (_p2) {
			return _elm_lang$core$Platform_Sub$none;
		}
	})();
